Given the root of a binary tree, return the average value of the nodes on each level in the form of an array. Answers within 10-5 of the actual answer 
will be accepted.
Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: [3.00000,14.50000,11.00000]
Explanation: The average value of nodes on level 0 is 3, on level 1 is 14.5, and on level 2 is 11.
Hence return [3, 14.5, 11].

Example 2:
Input: root = [3,9,20,15,7]
Output: [3.00000,14.50000,11.00000]


Solution:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int> >v;
    vector<double>ans;
    vector<double> averageOfLevels(TreeNode* root) {
        test(root,0);
        
        for(int i=0;i<v.size();i++)
        {
            
                int sz=v[i].size();
                double sum=0;
                for(int j=0;j<sz;j++)
                {
                    sum+=v[i][j];
                }
                ans.push_back(sum/(double)sz);
            
        }
        
        return ans;
    }
    
    void test(TreeNode* root,int level)
    {
        if(root==NULL) return;
        if(v.size() == level)
            v.push_back(vector<int>());
        v[level].push_back(root->val);
        test(root->left,level+1);
        test(root->right,level+1);

    }
    
};
