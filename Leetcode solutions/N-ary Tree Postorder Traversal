Given the root of an n-ary tree, return the postorder traversal of its nodes' values.
N-ary Tree input serialization is represented in their level order traversal. Each group of children is separated by the null value (See examples)

Example 1:
Input: root = [1,null,3,2,4,null,5,6]
Output: [5,6,3,2,4,1]

Solution:
/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int>ans;
    vector<int> postorder(Node* root) {
      if(root!=NULL)
      {
        for(Node* i:root->children)
        {
            postorder(i);
        }
        ans.push_back(root->val);
      }
        return ans;
    }
};
