Given the root of a binary tree, return the sum of all left leaves.
Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: 24
Explanation: There are two left leaves in the binary tree, with values 9 and 15 respectively.

Example 2:
Input: root = [1]
Output: 0

Solution:
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
  
    int sum_leaf(TreeNode root,int mark)
    {
        if(root==null) return 0;
      
        if(root.val!=null&&mark==1&&root.left==null&&root.right==null)
        {
            //Console.WriteLine("sum");
            return root.val;
        }
        
        return sum_leaf(root.left,1)+sum_leaf(root.right,0);
    }
    
    public int SumOfLeftLeaves(TreeNode root) {
        
        return sum_leaf(root,0);
    }
}
