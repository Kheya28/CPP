Given an integer n, return the number of strings of length n that consist only of vowels (a, e, i, o, u) and are lexicographically sorted.
A string s is lexicographically sorted if for all valid i, s[i] is the same as or comes before s[i+1] in the alphabet.

Example 1:
Input: n = 1
Output: 5
Explanation: The 5 sorted strings that consist of vowels only are ["a","e","i","o","u"].

Example 2:
Input: n = 2
Output: 15
Explanation: The 15 sorted strings that consist of vowels only are
["aa","ae","ai","ao","au","ee","ei","eo","eu","ii","io","iu","oo","ou","uu"].
Note that "ea" is not a valid string since 'e' comes after 'a' in the alphabet.

Example 3:
Input: n = 33
Output: 66045
 
Constraints:
1 <= n <= 50 

Solution:
class Solution {
public:
    int a[52][5]={0};
    int countVowelStrings(int n) {
        a[1][0]=1;
        a[1][1]=1;
        a[1][2]=1;
        a[1][3]=1;
        a[1][4]=1;
        
        for(int i=2;i<=n;i++)
        {
            for(int j=0;j<=4;j++)
            {
                for(int k=j;k<=4;k++)
                {
                    a[i][j]+=a[i-1][k];
                }
            }
        }
        
        int ans=a[n][0]+a[n][1]+a[n][2]+a[n][3]+a[n][4];
        return ans;
    }
};

//https://www.youtube.com/watch?v=_SgsB1ZhcIQ
